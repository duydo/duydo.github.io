<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>java on Duy Do</title><link>http://duydo.me/tags/java/</link><description>Recent content in java on Duy Do</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Duy Do</copyright><lastBuildDate>Mon, 06 Aug 2018 18:51:46 +0700</lastBuildDate><atom:link href="http://duydo.me/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>Java: Type Promotion</title><link>http://duydo.me/java-type-promotion/</link><pubDate>Mon, 06 Aug 2018 18:51:46 +0700</pubDate><guid>http://duydo.me/java-type-promotion/</guid><description>Cách đây khá lâu mình đem đoạn mã đơn giản bên dưới hỏi một số bạn làm Java, cả juniors và seniors, tất cả các bạn đều bảo rằng đoạn mã này không có vấn đề gì, biên dịch và chạy được.
1 2 byte b = 1; b = b * 2; Thật ra thì đoạn mã trên không thể biên dịch được.
Trước tiên thử phân tích xem vì sao các bạn trả lời như vậy.</description></item><item><title>Effective JPA with Enumeration</title><link>http://duydo.me/effective-jpa-with-enumeration/</link><pubDate>Sun, 24 Jan 2010 08:17:50 +0700</pubDate><guid>http://duydo.me/effective-jpa-with-enumeration/</guid><description>&lt;p>How to persist an enumeration effectively? Here is my experience.&lt;/p>
&lt;p>I will use Wordpress for example. We all know that every post in Wordpress blog system has a status with possible values: draft, pending-review, published&amp;hellip;&lt;/p></description></item><item><title>Fluent Interface</title><link>http://duydo.me/fluent-interface/</link><pubDate>Wed, 25 Mar 2009 08:11:23 +0700</pubDate><guid>http://duydo.me/fluent-interface/</guid><description>&lt;p>I&amp;rsquo;ve played with my own framework recently, I found a new term, called &amp;ldquo;Fluent Interface&amp;rdquo;. There is a great &lt;a href="http://martinfowler.com/bliki/FluentInterface.html">article&lt;/a> of Martin Fowler about this term, you can read it if you have not heard about it yet.&lt;/p>
&lt;p>The idea of &amp;ldquo;Fluent Interface&amp;rdquo; is instead of returning void in setter methods of an object, returning an object to promote object chaining.&lt;/p></description></item></channel></rss>